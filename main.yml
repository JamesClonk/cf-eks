---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'EKS master stack'

Parameters:
  CFS3BucketName:
    Type: String
    Default: cf-templates-1gj0ou9ebi6ia
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$

  CFS3KeyPrefix:
    Type: String
    Default: eks/
    AllowedPattern: ^[0-9a-zA-Z-/.]*$

  CFS3BucketRegion:
    Type: String
    Default: eu-central-1

  ClusterName:
    Type: String
    Default: "eks-cluster"
    Description: "Name for the EKS cluster."

  KubernetesVersion:
    Type: String
    Default: "1.20"

  KubernetesNetworkBlock:
    Type: String
    Default: 192.168.128.0/17
    Description: CIDR block to assign Kubernetes service IP / ClusterIP addresses from.

  PublicAccessCIDRs:
    Type: List<String>
    Default: 0.0.0.0/0

  PublicAccessEndpoint:
    Type: String
    AllowedValues: [Enabled, Disabled]
    Default: Enabled

  PrivateAccessEndpoint:
    Type: String
    AllowedValues: [Enabled, Disabled]
    Default: Enabled

  VpcBlock:
    Type: String
    Default: 192.168.0.0/16
    Description: CIDR range for the whole EKS VPC. This should be a valid private (RFC 1918) CIDR range.

  PublicSubnet01Block:
    Type: String
    Default: 192.168.0.0/23
    Description: CIDR block for public subnet 01 within the EKS VPC (used for bastion/jumphosts)

  PublicSubnet02Block:
    Type: String
    Default: 192.168.2.0/23
    Description: CIDR block for public subnet 02 within the EKS VPC (used for bastion/jumphosts)

  PublicSubnet03Block:
    Type: String
    Default: 192.168.4.0/23
    Description: CIDR block for public subnet 03 within the EKS VPC (used for bastion/jumphosts)

  PrivateSubnet01Block:
    Type: String
    Default: 192.168.16.0/20
    Description: CIDR block for private subnet 01 within the EKS VPC (used for EKS EC2 nodes)

  PrivateSubnet02Block:
    Type: String
    Default: 192.168.32.0/20
    Description: CIDR block for private subnet 02 within the EKS VPC (used for EKS EC2 nodes)

  PrivateSubnet03Block:
    Type: String
    Default: 192.168.48.0/20
    Description: CIDR block for private subnet 03 within the EKS VPC (used for EKS EC2 nodes)

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: "CloudFormation - S3 Configuration"
      Parameters:
      - CFS3BucketName
      - CFS3KeyPrefix
      - CFS3BucketRegion
    - Label:
        default: "EKS - Cluster Configuration"
      Parameters:
      - ClusterName
      - KubernetesVersion
      - KubernetesNetworkBlock
      - PublicAccessCIDRs
      - PublicAccessEndpoint
      - PrivateAccessEndpoint
    - Label:
        default: "EKS / EC2 - Network Configuration"
      Parameters:
      - VpcBlock
      - PublicSubnet01Block
      - PublicSubnet02Block
      - PublicSubnet03Block
      - PrivateSubnet01Block
      - PrivateSubnet02Block
      - PrivateSubnet03Block

Conditions:
  UsingDefaultBucket: !Equals [ !Ref CFS3BucketName, 'cf-templates-1gj0ou9ebi6ia' ]

Resources:
  IAM:
    Type: "AWS::CloudFormation::Stack"
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${CFS3KeyPrefix}/iam.yml'
        - S3Region: !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref CFS3BucketRegion ]
          S3Bucket: !If [ UsingDefaultBucket, !Sub '${CFS3BucketName}-${AWS::Region}', !Ref CFS3BucketName ]
      Parameters:
        ClusterRoleName: !Sub '${AWS::StackName}-cluster-role'
        NodeRoleName: !Sub '${AWS::StackName}-node-role'

  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${CFS3KeyPrefix}/vpc.yml'
        - S3Region: !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref CFS3BucketRegion ]
          S3Bucket: !If [ UsingDefaultBucket, !Sub '${CFS3BucketName}-${AWS::Region}', !Ref CFS3BucketName ]
      TimeoutInMinutes: '30'
      Parameters:
        VpcBlock: !Ref VpcBlock
        PublicSubnet01Block: !Ref PublicSubnet01Block
        PublicSubnet02Block: !Ref PublicSubnet02Block
        PublicSubnet03Block: !Ref PublicSubnet03Block
        PrivateSubnet01Block: !Ref PrivateSubnet01Block
        PrivateSubnet02Block: !Ref PrivateSubnet02Block
        PrivateSubnet03Block: !Ref PrivateSubnet03Block

  EKSControlPlane:
    Type: AWS::CloudFormation::Stack
    DependsOn: [ VPC, IAM ]
    Properties:
      TemplateURL: !Sub
        - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${CFS3KeyPrefix}/eks.yml'
        - S3Region: !If [ UsingDefaultBucket, !Ref 'AWS::Region', !Ref CFS3BucketRegion ]
          S3Bucket: !If [ UsingDefaultBucket, !Sub '${CFS3BucketName}-${AWS::Region}', !Ref CFS3BucketName ]
      Parameters:
        ClusterName: !Ref ClusterName
        KubernetesVersion: !Ref KubernetesVersion
        KubernetesNetworkBlock: !Ref KubernetesNetworkBlock
        RoleArn: !GetAtt IAM.Outputs.ClusterRoleArn
        SecurityGroupIds: !GetAtt VPC.Outputs.ControlPlaneSecurityGroup
        SubnetIds: [ !GetAtt VPC.Outputs.PublicSubnetIds, !GetAtt VPC.Outputs.PrivateSubnetIds ]
        PublicAccessCIDRs: !Ref PublicAccessCIDRs
        PublicAccessEndpoint: !Ref PublicAccessEndpoint
        PrivateAccessEndpoint: !Ref PrivateAccessEndpoint

Outputs:
  EKSStack:
    Value: !Ref EKSControlPlane
  EKSEndpoint:
    Value: !GetAtt EKSControlPlane.Outputs.Endpoint
  VPCStack:
    Value: !Ref VPC
  VPCId:
    Description: The VPC Id
    Value: !GetAtt VPC.Outputs.VPCId
  IAMStack:
    Value: !Ref IAM
